name: Tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        mode:
          - debug
          - release
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: i686-pc-windows-msvc, i686-unknown-linux-gnu
      - uses: Swatinem/rust-cache@v2

      - name: Tests debug
        if: matrix.mode == 'debug'
        run: cargo test -p openmls --verbose
      - name: Tests release
        if: matrix.mode == 'release'
        run: cargo test --release -p openmls --verbose

        # Test 32 bit builds on windows
      - name: Tests 32bit windows debug
        if: matrix.mode == 'debug' && matrix.os == 'windows-latest'
        run: cargo test -p openmls --verbose --target i686-pc-windows-msvc
      - name: Tests 32bit windows release
        if: matrix.mode == 'release' && matrix.os == 'windows-latest'
        run: cargo test --release -p openmls --verbose --target i686-pc-windows-msvc

        # Test 32 bit builds on linux
      - name: Tests 32bit linux debug
        if: matrix.mode == 'debug' && matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update && sudo apt install gcc-multilib
          cargo test -p openmls --verbose --target i686-unknown-linux-gnu
      - name: Tests 32bit linux release
        if: matrix.mode == 'release' && matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update && sudo apt install gcc-multilib
          cargo test --release -p openmls --verbose --target i686-unknown-linux-gnu
