name: Tests & Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: openmls

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup MacOS
        if: matrix.os == 'macos-latest'
        run: |
          sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
          sudo xcode-select -s /Applications/Xcode_12.4.app
          rustup target install aarch64-apple-darwin
          rustup target install aarch64-apple-ios
      - name: Tests
        run: cargo test --verbose
      - name: Apple Silicon Build
        if: matrix.os == 'macos-latest'
        run: |
          cargo build --target aarch64-apple-darwin --tests --verbose --features rust-crypto
          cargo build --release --target aarch64-apple-darwin --tests --verbose --features rust-crypto
      - name: iOS build
        if: matrix.os == 'macos-latest'
        run: |
          cargo build --target aarch64-apple-ios --tests --verbose --features rust-crypto
          cargo build --release --target aarch64-apple-ios --tests --verbose --features rust-crypto
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Stable with rustfmt and clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - name: Clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --manifest-path openmls/Cargo.toml
      - name: Cargo fmt
        run: cargo fmt -- --check
