searchState.loadedDescShard("openmls", 0, "OpenMLS\nCiphersuites for MLS\nCredentials\nOpenMLS Errors\nExtensions\nMessage framing\nGroup API for MLS\nKey Packages\nMessages\nSingle place, re-exporting the most used public functions. …\nKey Schedule\nOpenMLS Storage\nThis module implements the ratchet tree component of MLS.\nMLS versions\nA simple type for HPKE private keys.\nA simple type for HPKE public keys using <code>VLBytes</code> for …\nReturns the argument unchanged.\nHash References\nCalls <code>U::from(self)</code>.\nThis module defines traits used for signing and verifying …\nSignatures.\nA reference to an MLS object computed as a hash of the …\nA reference to a key package. This value uniquely …\nA reference to a proposal. This value uniquely identifies …\nGet a reference to the hash reference’s value as slice.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCompute a new <code>KeyPackageRef</code> value for a <code>value</code>.\nCompute a new <code>ProposalRef</code> value for a <code>value</code>.\nCompute a new <code>HashReference</code> value for a <code>value</code>.\nThe <code>Signable</code> trait is implemented by all struct that are …\nSignature generation and verification errors. The only …\nThe type of the object once it’s signed.\nThis trait must be implemented by all structs that contain …\nSignature generation failed\nThe verifiable trait must be implemented by any struct …\nSignature verification failed\nThis marker trait must be implemented by all structs that …\nThe type used for representing the verified data. Must …\nReturns the argument unchanged.\nBuild a signed struct version from the payload struct.\nCalls <code>U::from(self)</code>.\nReturn the string label used for labeled signing.\nReturn the string label used for labeled verification.\nSign the payload with the given <code>private_key</code>.\nA reference to the signature to be verified.\nReturn the unsigned, serialized payload that should be …\nReturn the unsigned, serialized payload that should be …\nVerifies the payload against the given <code>credential</code>. Usually …\nVerifies the payload against the given public key. The …\nA public signature key.\nLabeled signature content.\nSignature.\nA public signature key.\nReturns the bytes of the signature public key.\nReturns the bytes of the signature public key.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new signature public key from raw key.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the “raw” signature into an enriched form, …\nCreate a new <code>SignContent</code> from a string label and the …\nCreate a new signature public key from raw key bytes.\nGet the signature scheme of the public key.\nA <code>BasicCredential</code>\nBasic Credential.\nX.509 Certificate.\nCredential.\nCredentialType.\nA wrapper around a credential with a corresponding public …\nBundle consisting of a <code>Signer</code> and a <code>CredentialWithKey</code> to …\nAnother type of credential that is not in the MLS protocol …\nAn X.509 <code>Certificate</code>\nThe <code>Credential</code>.\nReturns the credential type.\nThe credential and public key corresponding to the <code>signer</code>.\nGet the credential, deserialized.\nCredential errors\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the identity of this basic credential as byte slice.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates and returns a new <code>Credential</code> of the given …\nCreate a new basic credential.\nGet this serialized credential content.\nThe corresponding public key as <code>SignaturePublicKey</code>.\nThe signer to be used with the group after the update.\nAn error that occurs in methods of a <code>super::Credential</code>.\nAn error that occurs in methods of a <code>super::Credential</code>.\nVerifying the signature with this credential failed.\nA library error occured.\nTLS codec error\nThe type of credential is not supported.\nWrong credential type\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA wrapper struct for an error string. This can be used …\nGeneric error type that indicates unrecoverable errors in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe application id extension allows applications to add an …\nAn <code>ApplicationIdExtension</code>\nApplication Identifiers\nExtension\nMLS Extension Types\nA list of extensions with unique extension types.\nTo join a group via an External Commit, a new member needs …\nAn <code>ExternalPubExtension</code>\nExternalSender\nGroup context extension that contains the credentials and …\nAn <code>ExternalSendersExtension</code>\nExternalSender (extension data)\nKeyPackage extension that marks a KeyPackage for use in a …\nA <code>LastResortExtension</code>\nThe ratchet tree extensions provides the whole public …\nA <code>RatchetTreeExtension</code>\nRatchet Tree Extension.\nThe required capabilities extension defines the …\nA <code>RequiredCapabilitiesExtension</code>\nRequired Capabilities Extension.\nIdentifies an external sender in the …\nA currently unknown extension type.\nA currently unknown extension.\nA unknown/unparsed extension represented by raw bytes.\nAdd an extension to the extension list.\nAdd an extension to the extension list (or replace an …\nGet a reference to the <code>ApplicationIdExtension</code> if there is …\nGet a reference to this extension as <code>ApplicationIdExtension</code>…\nGet a reference to this extension as <code>ExternalPubExtension</code>. …\nGet a reference to this extension as …\nGet a reference to this extension as <code>RatchetTreeExtension</code>. …\nGet a reference to this extension as …\nGet the value of the key id as byte slice.\nReturns <code>true</code> iff the extension list contains an extension …\nGet a slice with the required credential types.\nCreate an empty extension list.\nExtension errors.\nReturns the <code>ExtensionType</code>\nGet a slice with the required extension types.\nGet a reference to the HPKE public key.\nGet a reference to the <code>ExternalPubExtension</code> if there is …\nGet a reference to the <code>ExternalSendersExtension</code> if there …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an extension list with multiple extensions.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over the extension list.\nCreate a new key identifier extension from a byte slice.\nCreate a new <code>external_pub</code> extension.\nCreates a new <code>ExternalSender</code> instance.\nCreates a new <code>SenderExtensionIndex</code> instance.\nCreate a new <code>last_resort</code> extension.\nBuild a new extension from a vector of <code>Node</code>s.\nCreates a new <code>RequiredCapabilitiesExtension</code> from extension …\nGet a slice with the required proposal types.\nReturn the <code>RatchetTreeIn</code> from this extension.\nGet a reference to the <code>RatchetTreeExtension</code> if there is …\nRemove an extension from the extension list.\nGet a reference to the <code>RequiredCapabilitiesExtension</code> if …\nCreate an extension list with a single extension.\nGet a reference to the <code>UnknownExtension</code> with the given …\nSee <code>CapabilitiesExtensionError</code> for more details.\nCapabilities extension error\nThe provided extension list contains duplicate extensions.\nCapabilities extension is missing a version field.\nExtension error\nThe provided extension list contains an extension that is …\nThe provided extension list contains an extension that is …\nInvalid capabilities extensions.\nInvalid key package ID extensions.\nInvalid parent hash extensions.\nInvalid ratchet tree extensions.\nSee <code>InvalidExtensionError</code> for more details.\nInvalid extension error\nSee <code>ErrorString</code> for more details.\nSee <code>KeyPackageIdError</code> for more details.\nKeyPackage Id error\nSee <code>LibraryError</code> for more details.\nThe specified extension could not be found.\nSee <code>ParentHashError</code> for more details.\nParent hash error\nSee <code>RatchetTreeError</code> for more details.\nRatchet tree error\nCapabilities contains only unsupported ciphersuites.\nUnsupported extension type in required capabilities.\nUnsupported proposal type in required capabilities.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nApplication message\nApplication message received through a ProcessedMessage.\nAn application message.\nCommit\nThe sender is not a member of the group and has an …\nAn external join proposal sent by a NewMemberProposal …\nGroup information\nGroup information\nGroup information\nKeyPackage\nKeyPackage\nKeyPackage\nThe sender is a member of the group\nMLSMessage (Body)\nMLSMessage (Body)\nBefore use with the <code>MlsGroup</code> API, the message has to be …\nAn <code>MlsMessageOut</code> is typically returned from an <code>MlsGroup</code> …\nThe sender is a new member of the group that joins itself …\nThe sender is a new member of the group that joins itself …\n<code>PrivateMessage</code> is the framing struct for an encrypted …\nCiphertext message\nA <code>ProtocolMessage</code> containing a <code>PrivateMessage</code>.\nCiphertext message\nEncrypted message\n<code>PrivateMessage</code> is the framing struct for an encrypted …\nA message that has passed all syntax and semantics checks.\nContent of a processed message.\nProposal\nA standalone proposal.\nEnum containing a message for use with <code>process_message</code> and …\n<code>PublicMessage</code> is a framing structure for MLS messages. It …\nPlaintext message\nA <code>ProtocolMessage</code> containing a <code>PublicMessage</code>.\nPlaintext message\nPlaintext message\n<code>PublicMessageIn</code> is a framing structure for MLS messages. …\nAll possible sender types according to the MLS protocol …\nA Commit message.\nWelcome message\nWelcome message\nWelcome message\nWire format of MLS messages.\nReturns the additional authenticated data (AAD) of the …\nReturns a reference to the contents of this <code>MlsMessageOut</code>.\nGet the <code>ConfirmationTag</code>.\nReturns the content of the message.\nReturns the content type.\nReturns the <code>ContentType</code> of the message.\nReturns the <code>ContentType</code> of the message.\nReturns the credential of the message.\nReturns the epoch.\nGet the group epoch.\nReturns the epoch of the message.\nFraming errors.\nExtract the content of an <code>MlsMessageIn</code> after …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an <code>MlsMessageOut</code> from a <code>Welcome</code> message and the …\nReturns the group ID.\nGet the <code>GroupId</code>.\nReturns the group ID of the message.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the inner bytes and consumes the <code>ApplicationMessage</code>…\nReturns the content of the message and consumes the …\nReturns <code>true</code> if this is either an external proposal or …\nReturns <code>true</code> if this is a handshake message and <code>false</code> …\nGet the sender of this message.\nReturns the sender of the message.\nSerializes the message to a byte vector. Returns …\nTry to convert the message into a <code>ProtocolMessage</code>.\nReturns the wire format.\nReturns the wire format.\nAn error occurred during AEAD decryption.\nSee <code>TlsCodecError</code> for more details.\nSee <code>CryptoError</code> for more details.\nCouldn’t find a ratcheting secret for the given sender …\nIndex out of bounds\nSee <code>LibraryError</code> for more details.\nAn unrecoverable error has occurred due to a bug in the …\nThe content is malformed.\nMessage decryption error\nMlsMessage error\nProtocolMessage error\nRatchet generation has reached <code>u32::MAX</code>.\nCannot create decryption secrets from own sender ratchet …\nThe requested secret was deleted to preserve forward …\nSecret tree error\nSee <code>SecretTreeError</code> for more details.\nGeneration is too far in the future to be processed.\nGeneration is too old to be processed.\nThe message could not be decoded.\nThe message (or one of its parts) is too large to be …\nThe WireFormat was not PrivateMessage.\nWrong wire format\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn empty list of KeyPackages was provided.\nAdd members error\nHandshake messages must always be PrivateMessage\nHandshake messages must always be PrivateMessage\nHandshake messages must always be PublicMessage\nHandshake messages must always be PublicMessage\nThe committer can’t remove themselves.\nCannot decrypt own messages because the necessary key has …\nThe Commit tried to remove self from the group. This is …\nSelfRemove not allowed with pure ciphertext outgoing wire …\nProposal changes the immutable metadata extension, which …\nCiphersuites in Welcome and key package bundle don’t …\nThe <code>CommitBuilder</code> is used to easily and dynamically build …\nStage commit error\nSee <code>CommitBuilderStageError</code> for more details.\nSee <code>CommitBuilderStageError</code> for more details.\nSee <code>CommitBuilderStageError</code> for more details.\nSee <code>CommitBuilderStageError</code> for more details.\nSee <code>CommitBuilderStageError</code> for more details.\nError creating external commit.\nContains the messages that are produced by committing. The …\nCommit to pending proposals error\nThe Commit includes update proposals from the committer.\nThe Commit includes update proposals from the committer.\nThis stage is after we validated the data, ready for …\nThe computed confirmation tag does not match the expected …\nThe confirmation tag is invalid.\nThe confirmation Tag is missing.\nCreate add proposal error\nSee <code>CreateAddProposalError</code> for more details.\nCreate commit error\nSee <code>CreateCommitError</code> for more details.\nSee <code>CreateCommitError</code> for more details.\nSee <code>CreateCommitError</code> for more details.\nSee <code>CreateCommitError</code> for more details.\nSee <code>CreateCommitError</code> for more details.\nCreate group context ext proposal error\nSee <code>CreateGroupContextExtProposalError</code> for more details.\nCreate message error\nDuplicate encryption key in proposals and group.\nDuplicate init key in proposals.\nDuplicate remove proposals for the same member.\nDuplicate signature key in proposals and group.\nSee <code>EmptyInputError</code> for more details.\nSee <code>EmptyInputError</code> for more details.\nEmptyInput error\nThe epoch of the group context and PublicMessage didn’t …\nErrors that can happen when exporting a group info object.\nExport secret error\nSee <code>ExtensionError</code> for more details.\nAn extension in the group context extensions is not listed …\nThe new extension types in required capabilties contails …\nCommit from an external joiner\nThis is the builder for external commits. It allows you to …\nError type for the <code>ExternalCommitBuilder</code>.\nStage commit error\nExternal Commit error\nSee <code>ExternalCommitValidationError</code> for more details.\nSee <code>ExternalCommitValidationError</code> for more details.\nExternal Commit validaton error\nRegular Commits may not contain ExternalInit proposals, …\n8.1 Group Context\nError validation a GroupContextExtensions proposal.\nSee <code>GroupContextExtensionsProposalValidationError</code> for more …\nSee <code>GroupContextExtensionsProposalValidationError</code> for more …\nGroup epoch. Internally this is stored as a <code>u64</code>. The group …\nA group ID. The group ID is chosen by the creator of the …\nSee <code>GroupInfoError</code> for more details.\nSee <code>GroupSecretsError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nThe group is inactive because the member has been removed.\nDefines what wire format is acceptable for incoming …\nThe message’s wire format is incompatible with the group…\nThe message’s wire format is incompatible with the group…\nExternal Committer used the wrong index.\nThe HPKE init and encryption keys are the same.\nThis stage is for populating the builder.\nThe capabilities of the add proposal are insufficient for …\nThis is a wrapper type, because we can’t implement the …\nThe ciphersuite in the KeyPackage of the Add proposal does …\nThe add proposal’s ciphersuite or protocol version do …\nSee <code>StageCommitError</code> for more details.\nSee <code>StageCommitError</code> for more details.\nSee <code>InvalidExtensionError</code> for more details.\nInvalid extensions set in configuration\nInvalid external commit.\nThe signature on the GroupInfo is not valid.\nThe signature over the given group info is invalid.\nFound inline Add or Update proposals.\nInvalid <code>LeafNodeParameters</code>. <code>[CredentialWithKey]</code> can’t be …\nInvalid LeafNode signature.\nInvalid LeafNode source type\nMembership tag is invalid.\nError validating proposals.\nRemove proposal targets the wrong group member.\nInvalid sender type.\nVerifying the signature failed.\nBuilder for joining a group.\nNo joiner secret found in the Welcome message.\nThe requested key length is too long.\nSee <code>KeyPackageExtensionSupportError</code> for more details.\nThe KeyPackage could not be validated.\nError interacting with storage.\nVerify or skip the validation of leaf node lifetimes in …\nSee <code>LeafNodeUpdateError</code> for more details.\nThis error indicates the leaf node is invalid. See …\nSee <code>LeafNodeValidationError</code> for more details.\nSee <code>LeafNodeValidationError</code> for more details.\nSee <code>LeafNodeValidationError</code> for more details.\nSee <code>LeafNodeValidationError</code> for more details.\nSee <code>LeafNodeValidationError</code> for more details.\nLeave group error\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nThis stage is after the PSKs were loaded, ready for …\nIncoming wire formats can be mixed while outgoing wire …\nIncoming wire formats can be mixed while outgoing wire …\nMalformed Welcome message.\nA member in the group is identified by this <code>Member</code> struct.\nCommit from a group member\nError merging a commit.\nError merging external commit.\nSee <code>MergeCommitError</code> for more details.\nError merging pending commit\nThe confirmation tag is missing.\nCredential is missing from external commit.\nCredential is missing from external commit.\nMissing decryption key.\nNo external_pub extension available to join group by …\nNo external_pub extension available to join group by …\nMembership tag is missing.\nThe proposal queue is missing a proposal for the commit.\nThe proposal queue is missing a proposal for the commit.\nNo ratchet tree available to build initial tree after …\nNo ratchet tree available to build initial tree.\nNo ratchet tree available to build initial tree.\nHandshake messages can either be PrivateMessage or …\nA <code>MlsGroup</code> represents an MLS group with a high-level API. …\nBuilder struct for an <code>MlsGroup</code>.\nSpecifies configuration for the creation of an <code>MlsGroup</code>. …\nBuilder for an <code>MlsGroupCreateConfig</code>.\nThe <code>MlsGroupJoinConfig</code> contains all configuration …\nBuilder struct for an <code>MlsGroupJoinConfig</code>.\n<code>MlsGroupState</code> determines the state of an <code>MlsGroup</code>. The …\nGroup state error\nSee <code>MlsGroupStateError</code> for more details.\nSee <code>MlsGroupStateError</code> for more details.\nMultiple ExternalInit proposal found.\nFound multiple inline Remove proposals.\nNew group error\nNo ExternalInit proposal found.\nThe group doesn’t contain external senders extension.\nNo matching encryption key was found in the key store.\nNo matching key package was found in the key store.\nNo matching KeyPackage was found in the key store.\nThe message is from an epoch too far in the past.\nThe Commit doesn’t have a path despite the sender being …\nExternal Commit has to contain a path.\nCan’t execute operation because there is no pending …\nAn application message was sent from an external sender.\nThe PublicMessage is not a Commit despite the sender begin …\nThe provided message is not a Welcome message.\nThe PublicMessage is not an External Add Proposal despite …\nThe group state is in an opertaional state, where new …\nDefines what wire format should be used for outgoing …\nThe Commit was created by this client.\nMissing own key to apply proposal.\nMissing own key to apply proposal.\nIncoming and outgoing wire formats are always ciphertext.\nIncoming and outgoing wire formats are always plaintext.\nUnable to verify the leaf node signature.\nCan’t execute operation because a pending commit exists.\nThere is currently a pending Commit that hasn’t been …\nPending Commit state. Differentiates between Commits …\nCan’t create message because a pending proposal exists.\nRequested pending proposal hasn’t been found in local …\nPrivate part of <code>init_key</code> not found in key store.\nProcess message error\nA <code>Welcome</code> message that has been processed but not staged …\nProposal error\nCouldn’t find the proposal for the given <code>ProposalRef</code>.\nA ProposalStore can store the standalone proposals that …\nProposal validation error\nSee <code>ProposalValidationError</code> for more details.\nSee <code>ProposalValidationError</code> for more details.\nPropose add members error\nSee <code>ProposeAddMemberError</code> for more details.\nPropose PSK error\nPropose remove members error\nSee <code>ProposeRemoveMemberError</code> for more details.\nPropose self update error\nSee <code>ProposeSelfUpdateError</code> for more details.\nSee <code>PskError</code> for more details.\nSee <code>PskError</code> for more details.\nSee <code>PskError</code> for more details.\nSee <code>PskError</code> for more details.\nSee <code>PskError</code> for more details.\nThis struct holds all public values of an MLS group.\nThis error indicates the public tree is invalid. See …\nThis error indicates the public tree is invalid. See …\nThis error indicates the public tree is invalid. See …\nProcess message error\nThis error indicates the public tree is invalid. See …\nThis error indicates the public tree is invalid. See …\nSee <code>PublicTreeError</code> for more details.\nA queued Add proposal\nAlternative representation of a Proposal, where the sender …\nA queued PresharedKey proposal\nA queued Remove proposal\nA queued Update proposal\nExternal commit contains referenced proposal\nAn empty list of KeyPackage references was provided.\nRemove members error\nHelper <code>enum</code> that classifies the kind of remove operation. …\nRemove proposal error\nThe new extension types in required capabilties contails …\nUnable to determine commit path.\nSelf update error\nThe sender is of type external, which is not valid.\nThe sender is of type <code>NewMemberProposal</code>, which is not …\nSee <code>SignatureError</code> for more details.\nSkip the verification of the lifeimte in leaf nodes in the …\nStage Commit error\nContains the changes from a commit to the group state.\nA <code>StagedWelcome</code> can be inspected and then turned into a …\nError erasing proposal from storage.\nThis error indicates that an error occurred while reading …\nAn erorr occurred when writing group to storage\nError interacting with storage.\nError writing updated group to storage.\nError writing updated group to storage.\nAn error occurred when writing group to storage\nError accessing the storage.\nError writing to storage.\nError writing to storage.\nError writing to storage\nError writing to storage\nError writing to storage\nAn error ocurred while writing to storage\nError accessing the storage.\nError accessing storage.\nError writing to storage\nError writing proposal to storage.\nAnother member (indicated by the leaf index) requested to …\nAnother member (indicated by the leaf index) was removed …\nCommit has more than one GroupContextExtensions proposal.\nToo many new members: the tree is full.\nSee <code>TreeSyncAddLeaf</code> for more details.\nCould not decrypt the Welcome message.\nCould not decrypt the message\nExternal application messages are not permitted.\nExternal application messages are not permitted.\nExternal commit messages are not permitted.\nExternal commit messages are not permitted.\nThe provided external sender is not authorized to send …\nThe PublicMessage contains an application message but was …\nSender is not part of the group.\nThe sender could not be matched to a member of the group.\nThe member that should be removed can not be found.\nThe member that should be removed can not be found.\nThe remove proposal referenced a non-existing member.\nSender not found in tree.\nSender not found in tree.\nWe don’t support all capabilities of the group.\nWe don’t support the ciphersuite of the group we are …\nWe don’t support the ciphersuite of the group we are …\nUnsupported extension type in required capabilities.\nUnsupported extensions found in the KeyPackage of another …\nThe new member does not support all required extensions.\nWe don’t support the version of the group we are trying …\nThe proposal type is not supported by all group members.\nUnsupported proposal type in required capabilities.\nThe proposal is invalid for the Sender of type External\nThe proposal is invalid for the Sender of type External\nFound an update from a non-member.\nSee <code>ApplyUpdatePathError</code> for more details.\nThe UpdatePath could not be validated.\nTried to use a group after being evicted from it.\nValidation error\nSee <code>ValidationError</code> for more details.\nSee <code>ValidationError</code> for more details.\nSee <code>ValidationError</code> for more details.\nSee <code>UpdatePathError</code> for more details.\nVerify the lifetime of leaf nodes in the ratchet tree.\nAll valid wire format policy combinations.\nWe issued a remove proposal for ourselves in the previous …\nWe removed another member (indicated by the leaf index).\nSomeone else (indicated by the <code>Sender</code>) removed us from the …\nWelcome error\nDefines what wire format is desired for outgoing handshake …\nMessage epoch differs from the group’s epoch.\nMessage group ID differs from the group’s group ID.\nstage_commit was called with an PublicMessage that is not …\nA proposal has the wrong sender type.\nWrong wire format.\nReturns the additional authenticated data (AAD) for the …\nAdds members to the group.\nAdds members to the group.\nAdds a proposal to the proposals to be committed. To add …\nReturns a reference to the proposal\nAdd the <code>QueuedProposal</code> to the <code>PublicGroup</code>s internal …\nAdds the proposals in the iterator to the proposals to be …\nReturns the Add proposals that are covered by the Commit …\nAdds a <code>PreSharedKeyProposal</code> to the proposals to be …\nAdds the <code>PreSharedKeyProposal</code> in the iterator to the …\nReturns the group ID as a byte slice.\nReturns the group epoch as a <code>u64</code>.\nBuild the <code>StagedWelcome</code>.\nBuild a new group as configured by this builder.\nValidates the inputs and builds the commit. The last …\nFinalizes the builder and returns an <code>MlsGroupJoinConfig</code>.\nFinalizes the builder and returns an <code>MlsGroupCreateConfig</code>.\nSimilar to <code>StagedWelcome::new_from_welcome</code> but as a …\nBuild the <code>MlsGroup</code> from the provided <code>VerifiableGroupInfo</code> …\nJust like <code>build</code>, this function validates the inputs and …\nReturns a builder for <code>MlsGroupJoinConfig</code>.\nReturns a builder for <code>MlsGroupCreateConfig</code>\nCreates a builder which can be used to configure and build …\nSets the <code>capabilities</code> of the group creator’s leaf node.\nSets the <code>ciphersuite</code> of the MlsGroup.\nReturns the <code>Ciphersuite</code>.\nSets the <code>ciphersuite</code> property of the MlsGroupCreateConfig.\nReturns the group’s ciphersuite.\nGet the ciphersuite.\nReturn the ciphersuite.\nSets the <code>group_state</code> to <code>MlsGroupState::Operational</code>, thus …\nClear the pending proposals, if the proposal store is not …\nGets the Commit messsage. For owned version, see …\nReturns a builder for commits.\nCreates a Commit message that covers the pending proposals …\nReturns the configuration.\nGet confirmation tag.\nGet confirmation tag.\nReturn the confirmed transcript hash.\nSets whether or not the proposals in the proposal store of …\nGets all three messages, some of which optional. For owned …\nSets whether or not a <code>GroupInfo</code> should be created when the …\nCreates an application message. Returns …\nReturns own credential. If the group is inactive, it …\nThe member’s credential.\nReturns the credentials that the caller needs to verify …\nRemove the persisted state of this group from storage. …\nDeletes the <code>PublicGroup</code> from storage.\nThe member’s public HPHKE encryption key.\nReturns the epoch.\nReturn the epoch.\nReturns the <code>EpochAuthenticator</code> of the staged commit state …\nReturns the epoch authenticator of the current epoch.\nExport a group info object for this group.\nExports the Ratchet Tree.\nExport the nodes of the public tree.\nExports a secret from the current epoch. Returns …\nReturns the index of the sender of a staged, external …\nReturns the index of the sender of a staged, external …\nGet a reference to the group context <code>Extensions</code> of this …\nReturn the extensions.\nCreates a new <code>ExternalCommitBuilder</code> to build an external …\nFinalizes and returns the <code>MlsGroup</code>, as well as the …\nSets whether or not the commit should force a self-update. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>PublicGroup</code> instance to start tracking an …\nCreate a group ID from a byte slice.\nReturns a resumption psk for a given epoch. If no …\nReturns the <code>GroupContext</code> of the staged commit state.\nGet the <code>GroupContext</code> of this welcome’s <code>PublicGroup</code>.\nGet the group context.\nReturns the <code>Extensions</code> set as the initial group context. …\nReturns the group ID.\nGet the group id.\nReturn the group ID.\nGets the GroupInfo message. Only <code>Some</code> if new clients have …\nReturns true if there are pending proposals queued in the …\nReturns a reference to the wire format policy’s incoming …\nThe member’s leaf index in the ratchet tree.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets the Commit messsage. This method consumes the …\nGets all three messages, some of which optional. This …\nConsumes the <code>StagedWelcome</code> and returns the respective …\nGets the GroupInfo message. Only <code>Some</code> if new clients have …\nGets the GroupInfo messsage. Only <code>Some</code> if new clients have …\nGets all three messages, some of which optional, as …\nConsume the <code>ProcessedWelcome</code> and combine it with the …\nGets the Welcome messsage. Only <code>Some</code> if new clients have …\nGets the Welcome messsage. Only <code>Some</code> if new clients have …\nReturns whether the own client is still a member of the …\nJoin an existing group through an External Commit. The …\nReturns the <code>MlsGroupJoinConfig</code> of groups created with this …\nReturn a reference to the leaf at the given <code>LeafNodeIndex</code> …\nSets the leaf node parameters for the new leaf node in a …\nLeave the group.\nLeave the group via a SelfRemove proposal.\nSets the <code>lifetime</code> of the group creator’s leaf.\nReturns the <code>MlsGroupCreateConfig</code> lifetime configuration.\nSets the <code>lifetime</code> property of the MlsGroupCreateConfig.\nLoads the state of the group with given id from persisted …\nLoads the <code>PublicGroup</code> corresponding to a <code>GroupId</code> from …\nLoads the PSKs for the PskProposals marked for inclusion …\nSets the <code>max_past_epochs</code> property of the MlsGroup. This …\nReturns the <code>MlsGroupCreateConfig</code> max past epochs.\nSets the <code>max_past_epochs</code> property of the <code>MlsGroupJoinConfig</code>…\nSets the <code>max_past_epochs</code> property of the …\nReturns the <code>Credential</code> of a member corresponding to the …\nReturns the <code>Member</code> corresponding to the given leaf index. …\nReturns a list of <code>Member</code>s in the group.\nGet an iterator over all <code>Member</code>s of this welcome’s …\nGet an iterator over all <code>Member</code>s of this <code>PublicGroup</code>.\nMerges a StagedCommit into the public group state.\nMerges the pending <code>StagedCommit</code> if there is one, and …\nMerge a StagedCommit into the group after inspection. As …\nCreates a new <code>ExternalCommitBuilder</code> with default values.\nreturns a new <code>CommitBuilder</code> for the given <code>MlsGroup</code>.\nConstructs a new <code>RemoveOperation</code> from a …\nCreate a new <code>ProposalStore</code>.\nCreate new member.\nCreates a new group with the creator as the only member …\nCreates a new processed <code>Welcome</code> message , which can be …\nCreates a new staged welcome from a <code>Welcome</code> message. …\nCreates a new group with a given group ID with the creator …\nSets the <code>number_of_resumption_psks</code> property of the …\nReturns the <code>MlsGroupCreateConfig</code> number of resumption psks.\nSets the <code>number_of_resumption_psks</code> property of the …\nSets the <code>number_of_resumption_psks</code> property of the …\nReturns a reference to the wire format policy’s outgoing …\nReturns a reference to the own <code>LeafNode</code>.\nReturns the leaf index of the client in the tree owning …\nReturns the leaf node of the client in the tree owning …\nSets the <code>padding_size</code> property of the MlsGroup.\nReturns the padding size set in this  <code>MlsGroupJoinConfig</code>.\nReturns the <code>MlsGroupCreateConfig</code> padding size.\nSets the <code>padding_size</code> property of the <code>MlsGroupJoinConfig</code>.\nSets the <code>padding_size</code> property of the MlsGroupCreateConfig.\nReturns a reference to the <code>StagedCommit</code> of the most …\nReturns an <code>Iterator</code> over pending proposals.\nThis module contains the implementation of the processing …\nParses incoming messages from the DS. Checks for syntactic …\nThis function is used to parse messages from the DS. It …\nGet a reference to the <code>ProcessedWelcome</code>.\nReturns the <code>Proposal</code> as a reference\nReturns the <code>ProposalOrRefType</code>.\nGenerate a proposal\nCreates proposals to add members to the group.\nCreates proposals to add an external PSK to the key …\nAdds an Add proposal to the provided <code>KeyPackage</code> to the …\nCreates proposals to add an external PSK to the key …\nCreates proposals to add an external PSK to the key …\nCreates proposals to add an external PSK to the key …\nCreates proposals to add an external PSK to the key …\nAdds a GroupContextExtensions proposal for the provided …\nCreates a proposals with a new set of <code>extensions</code> for the …\nAdds a Remove proposal for the provided <code>LeafNodeIndex</code>es to …\nCreates proposals to remove members from the group. The …\nCreates proposals to remove members from the group. The …\nCreates proposals to remove members from the group. The …\nCreates proposals to add an external PSK to the key …\nCreates a proposal to update the own leaf node. The …\nReturn the protocol version.\nReturns a reference to the proposal\nReturns the PresharedKey proposals that are covered by the …\nGet a reference to the PSKs in this Welcome message.\nReturns an iterator over all <code>QueuedProposal</code>s.\nReturn all queued proposals\nCreate a new (random) group ID.\nRemoves members from the group.\nRemoves a specific proposal from the store.\nReturns a reference to the proposal\nRemove the Proposal with the given <code>ProposalRef</code> from the …\nReturns the Remove proposals that are covered by the …\nGet the required capabilities.\nGet the required capabilities extension.\nReturns the resumption PSK secret of the current epoch.\nReturns <code>true</code> if the member was removed through a proposal …\nUpdates the own leaf node. The application can choose to …\nUpdates the own leaf node. The application can choose to …\nReturns the <code>Sender</code> as a reference\nReturns a reference to the sender\nReturns a reference to the sender\nReturns a reference to the sender\nReturns a reference to the sender\nSets the <code>sender_ratchet_configuration</code> property of the …\nReturns the <code>SenderRatchetConfiguration</code> set in this  …\nReturns the <code>MlsGroupCreateConfig</code> sender ratchet …\nSets the <code>sender_ratchet_configuration</code> property of the …\nSets the <code>sender_ratchet_configuration</code> property of the …\nSets the additional authenticated data (AAD) for the next …\nSets the configuration.\nThe member’s public signature key.\nSkip the validation of lifetimes in leaf nodes in the …\nSkip the validation of lifetimes in leaf nodes in the …\nStages the commit and returns the protocol messages.\nStores a standalone proposal in the internal ProposalStore\nReturns the group ID as a byte vector.\nGets the Welcome messsage. Only <code>Some</code> if new clients have …\nReturn the tree hash.\nGet a reference to the GroupInfo in this Welcome message.\nUpdates Group Context Extensions\nReturns the leaf node of the (optional) update path.\nReturns a reference to the proposal\nReturns the Update proposals that are covered by the …\nSets the <code>use_ratchet_tree_extension</code> property of the …\nReturns the <code>MlsGroupCreateConfig</code> boolean flag that …\nSets the <code>use_ratchet_tree_extension</code> property of the …\nSets the <code>use_ratchet_tree_extension</code> property of the …\nGet the version.\nGets the Welcome messsage. Only <code>Some</code> if new clients have …\nReturns the <code>LeafNode</code> of the group member that authored the …\nReturns the <code>LeafNodeIndex</code> of the group member that …\nReturns the wire format policy set in this  …\nReturns the <code>MlsGroupCreateConfig</code> wire format policy.\nSets the <code>wire_format</code> property of the <code>MlsGroupJoinConfig</code>.\nSets the <code>wire_format</code> property of the MlsGroupCreateConfig.\nSpecifies additional authenticated data (AAD) to be …\nSets the group creator’s <code>Capabilities</code>\nSpecifies the configuration to use for the group built as …\nSets the initial group context extensions\nSets initial group context extensions.\nSets the group ID of the <code>MlsGroup</code>.\nSets the initial leaf node extensions\nSets extensions of the group creator’s <code>LeafNode</code>.\nAdds SelfRemove proposals to the external commit. Other …\nThe ratchet tree to use for the new group.\nSpecifies the ratchet tree to use for the external commit. …\nSets the <code>wire_format</code> property of the MlsGroup.\nInit key for HPKE.\nThe key package struct.\nBuilder that helps creating (and configuring) a <code>KeyPackage</code>.\nA <code>KeyPackageBundle</code> contains a <code>KeyPackage</code> and the init and …\nThe lifetime represents the times between which clients …\nReturn the internal <code>HpkePublicKey</code> as a slice.\nFinalize and build the key package.\nCreate a key package builder.\nCheck whether the this key package supports all the …\nGet the <code>Ciphersuite</code>.\nKey Package errors\nGet a reference to the extensions of this key package.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nValSem(openmls/annotations#32): Applications MUST define a …\nCompute the <code>KeyPackageRef</code> of this <code>KeyPackage</code>. The …\nGet the public HPKE init key of this key package.\nInitialize raw lifetime without skew and explicit dates.\nGet a reference to the private init key.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this lifetime is valid.\nReturn the internal <code>HpkePublicKey</code>.\nGet a reference to the public part of this bundle, i.e. …\nSet the key package extensions.\nIncoming KeyPackages. This modules contains …\nSet the key package lifetime.\nCheck if this KeyPackage is a last resort key package.\nGet the <code>LeafNode</code> reference.\nSet the leaf node capabilities.\nSet the leaf node extensions.\nGet the lifetime of the KeyPackage\nMark the key package as a last-resort key package via a …\nCreate a new lifetime with lifetime <code>t</code> (in seconds). Note …\nCreate a key package builder.\nReturns the “not after” timestamp of the KeyPackage.\nReturns the “not before” timestamp of the KeyPackage.\nThe ciphersuite does not match the signature scheme.\nThe init key and the encryption key are equal.\nThe leaf node signature is not valid.\nInvalid LeafNode source type\nThe lifetime of the leaf node is not valid.\nThe protocol version is not valid.\nThe key package signature is not valid.\nKeyPackage extension support error\nKeyPackage new error\nKeyPackage verify error\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nThe lifetime of the leaf node is missing.\nSee <code>SignatureError</code> for more details.\nAccessing storage failed.\nA key package extension is not supported in the leaf’s …\nThe key package does not support all required extensions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe key package struct.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns a <code>CredentialWithKey</code> from the unverified payload\nVerify that this key package is valid:\nConfirmation tag field of PublicMessage. For type safety …\nDecryption failed.\nEncryptedGroupSecrets\nError related to group secrets.\nMalformed.\nWelcome message\nExternal Proposals\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThis module contains all types related to group info …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBuild a new <code>EncryptedGroupSecrets</code>.\nReturns the encrypted group secrets’ new <code>KeyPackageRef</code>.\nProposals\nProposals\nReturns a reference to the encrypted group secrets in this …\nExternal Proposal where sender is External. A party …\nExternal Add Proposal where sender is NewMemberProposal. A …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates an external Add proposal. For clients requesting …\nCreates an external Add proposal. For delivery services …\nCreates an external GroupContextExtensions proposal. For …\nCreates an external Remove proposal. For delivery services …\nDecryption failed.\nGroupInfo\nError related to group info.\nMalformed.\nA type that represents a group info of which the signature …\nGet (unverified) ciphersuite of the verifiable group info.\nGet (unverified) epoch of the verifiable group info.\nGet (unverified) extensions of the verifiable group info.\nReturns the <code>GroupInfo</code> extensions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the group context.\nGet (unverified) group ID of the verifiable group info.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>VerifiableGroupInfo</code> from its contents.\nReturns the <code>GroupInfo</code> signature.\nAdd Proposal.\nAppAck Proposal.\nA custom proposal with semantics to be implemented by the …\nExternalInit Proposal.\nGroupContextExtensions Proposal.\nPreSharedKey Proposal.\nProposal.\nProposal by value.\n11.2 Commit\nMLS Proposal Types\nReInit Proposal.\nProposal by reference\nRemove Proposal.\nUpdate Proposal.\nGet the extensions of the proposal\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the proposal type requires a path and <code>false</code>\nIndicates whether a Commit containing this Proposal …\nReturns <code>true</code> if the proposal is <code>Remove</code>.\nReturns a reference to the key package in the proposal.\nReturns a reference to the leaf node in the proposal.\nCreate a new PSK proposal\nGenerate a new custom proposal.\nReturns the payload of this <code>CustomProposal</code>.\nReturns the proposal type.\nReturns the proposal type of this <code>CustomProposal</code>.\nReturns the leaf index of the removed leaf in this …\nAdd Proposal.\nProposal.\nUpdate Proposal.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndicates whether a Commit containing this ProposalIn …\nReturns the proposal type.\nAEAD types\nAES GCM 128\nAES GCM 256\nAES GCM 128\nAES GCM 256\nApplication message received through a ProcessedMessage.\nAn application message.\nCapabilities of <code>LeafNode</code>s.\nA helper for building <code>Capabilities</code>\nChaCha20 Poly1305\nChaCha20 Poly1305\nMLS ciphersuites.\nThe <code>CommitBuilder</code> is used to easily and dynamically build …\nContains the messages that are produced by committing. The …\nThis stage is after we validated the data, ready for …\nPublic group creation from external error.\nCrypto errors.\nAn error occurred during decoding.\nThe <code>DeserializeBytes</code> trait defines functions to …\nDH KEM on x25519\nDH KEM on x448\nDH KEM on P256\nDH KEM on P384\nDH KEM on P521\nThe ratchet tree contains duplcate encryption keys\nECDSA_SECP256R1_SHA256\nECDSA_SECP384R1_SHA384\nECDSA_SECP521R1_SHA512\nED25519\nED448\nAn error occurred during encoding.\nReached the end of a byte stream.\nErrors that are thrown by this crate.\nExport-only\nThe sender is not a member of the group and has an …\nThis is the builder for external commits. It allows you to …\nError type for the <code>ExternalCommitBuilder</code>.\nAn external join proposal sent by a NewMemberProposal …\nGroup information\nHash types\nHKDF SHA 256\nHKDF SHA 384\nHKDF SHA 512\nAEAD Types for HPKE.\n7.7. Update Paths\nConvenience tuple struct for an HPKE configuration.\nKDF Types for HPKE\nKEM Types for HPKE\nHelper holding a (private, public) key pair as byte …\nA simple type for HPKE private keys.\nThis stage is for populating the builder.\nFound a path from a parent with an unmerged leaf to the …\nInvalid extensions set in configuration\nThe signature on the GroupInfo is not valid.\nInvalid input when trying to decode a primitive integer.\nError validating proposals.\nThe length of a vector is invalid.\nError writing everything out.\nKeyPackage\nThis struct implements the MLS leaf node.\nA leaf node.\nLeafNodeIndex references a leaf node in a tree.\nParameters for a leaf node that can be chosen by the …\nSee <code>LeafNodeValidationError</code>\nAn internal library error that indicates a bug.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nThis stage is after the PSKs were loaded, ready for …\nDH KEM P256 | AES-GCM 128 | SHA2-256 | EcDSA P256\nDH KEM x25519 | AES-GCM 128 | SHA2-256 | Ed25519\nDH KEM x25519 | Chacha20Poly1305 | SHA2-256 | Ed25519\nDH KEM P384 | AES-GCM 256 | SHA2-384 | EcDSA P384\nDH KEM P521 | AES-GCM 256 | SHA2-512 | EcDSA P521\nDH KEM x448 | AES-GCM 256 | SHA2-512 | Ed448\nDH KEM x448 | Chacha20Poly1305 | SHA2-512 | Ed448\nX-WING KEM draft-01 | Chacha20Poly1305 | SHA2-256 | Ed25519\nThe sender is a member of the group\nNo external_pub extension available to join group by …\nNo ratchet tree available to build initial tree.\nMLSMessage (Body)\nBefore use with the <code>MlsGroup</code> API, the message has to be …\nAn <code>MlsMessageOut</code> is typically returned from an <code>MlsGroup</code> …\nThe sender is a new member of the group that joins itself …\nThe sender is a new member of the group that joins itself …\nContainer enum for leaf and parent nodes.\nThe OpenMLS Crypto Provider Trait\nThis struct implements the MLS parent node. It contains …\nA parent node.\nCiphertext message\nA <code>ProtocolMessage</code> containing a <code>PrivateMessage</code>.\nA message that has passed all syntax and semantics checks.\nContent of a processed message.\nA standalone proposal.\nEnum containing a message for use with <code>process_message</code> and …\nThis struct holds all public values of an MLS group.\nPublic group builder error.\nThis error indicates the public tree is invalid. See …\nPlaintext message\nA <code>ProtocolMessage</code> containing a <code>PublicMessage</code>.\nA wrapper struct around <code>VLBytes</code> that implements …\nAll possible sender types according to the MLS protocol …\nStores the configuration parameters for <code>DecryptionRatchet</code>s.\nThe <code>SerializeBytes</code> trait provides a function to serialize …\nSignatureScheme according to IANA TLS parameters\nThe <code>Size</code> trait needs to be implemented by any struct that …\nA Commit message.\nAn error occurred when writing group to storage\nFound unexpected data after deserializing.\nThe computed tree hash does not match the one in the …\nThis error indicates the public tree is invalid. See …\nA 3 byte wide unsigned integer type as defined in RFC 5246.\nSender not found in tree.\nAn unknown value in an enum. The application might not …\nA parent node has an unmerged leaf that is not a …\nWe don’t support the ciphersuite of the group we are …\nWe don’t support the version of the group we are trying …\nVariable-length encoded byte vectors. Use this struct if …\nA currently unknown ciphersuite.\nWelcome message\nError writing to storage.\nXWing combiner for ML-KEM and X25519\nGet the <code>AeadType</code> for this <code>Ciphersuite</code>.\nAEAD decrypt with the given parameters.\nAEAD encrypt with the given parameters.\nReturns the key size of the used AEAD.\nReturns the length of the nonce of the AEAD.\nGet the raw slice.\nGet a reference to the vlbytes’s vec.\nGet a reference to the vlbytes’s vec.\nGet a slice to the raw vector.\nGet a slice to the raw vector.\nGet a slice to the raw vector.\nGet a slice to the raw vector.\nGet a slice to the raw vector.\nGet a slice to the raw vector.\nGet a slice to the raw vector.\nGet a slice to the raw vector.\nGet a slice to the raw vector.\nGet a slice to the raw vector.\nGet a slice to the raw vector.\nGet a slice to the raw vector.\nGet the raw slice.\nGet the raw slice.\nGet the raw slice.\nGet the raw slice.\nGet the raw slice.\nGet the raw slice.\nGet the raw slice.\nGet the raw slice.\nBuilds the <code>Capabilities</code>.\nCreates a new <code>CapabilitiesBuilder</code> for constructing …\nGet a reference to the list of ciphersuites in this …\nSets the <code>ciphersuites</code> field on the <code>Capabilities</code>.\nGet a reference to the list of supported credential types.\nSets the <code>credentials</code> field on the <code>Capabilities</code>.\nGet the crypto provider.\nDerive a new HPKE keypair from a given input key material.\nCreate new empty <code>Capabilities</code>.\nGet a reference to the list of supported extensions.\nSets the <code>extensions</code> field on the <code>Capabilities</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>TlsVec</code> from a slice.\nCreate a new <code>TlsVec</code> from a slice.\nCreate a new <code>TlsVec</code> from a slice.\nCreate a new <code>TlsVec</code> from a slice.\nCreate a new <code>TlsVec</code> from a slice.\nCreate a new <code>TlsVec</code> from a slice.\nCreate a new <code>TlsVec</code> from a slice.\nCreate a new <code>TlsVec</code> from a slice.\nCreate a new <code>TlsVec</code> from a slice.\nCreate a new <code>TlsVec</code> from a slice.\nCreate a new <code>TlsVec</code> from a slice.\nCreate a new <code>TlsVec</code> from a slice.\nReturns a reference to an element or subslice depending on …\nReturns a reference to an element or subslice depending on …\nReturns a reference to an element or subslice depending on …\nReturns a reference to an element or subslice depending on …\nReturns a reference to an element or subslice depending on …\nReturns a reference to an element or subslice depending on …\nReturns a reference to an element or subslice depending on …\nReturns a reference to an element or subslice depending on …\nReturns a reference to an element or subslice depending on …\nReturns a reference to an element or subslice depending on …\nReturns a reference to an element or subslice depending on …\nReturns a reference to an element or subslice depending on …\nHash the <code>data</code>.\nGet the <code>HashType</code> for this <code>Ciphersuite</code>\nGet the length of the used hash algorithm.\nHKDF expand.\nHKDF extract.\nGet the <code>HpkeAeadType</code> for this <code>Ciphersuite</code>.\nGet the <code>HpkeConfig</code> for this <code>Ciphersuite</code>.\nGet the <code>HpkeKdfType</code> for this <code>Ciphersuite</code>.\nGet the <code>HpkeKemType</code> for this <code>Ciphersuite</code>.\nHPKE single-shot decryption of <code>input</code> with <code>sk_r</code>, using <code>info</code> …\nHPKE single-shot encryption of <code>ptxt</code> to <code>pk_r</code>, using <code>info</code> …\nHPKE single-shot setup of a receiver and immediate export …\nHPKE single-shot setup of a sender and immediate export a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the underlying vector and consume this.\nGet the underlying vector and consume this.\nGet the underlying vector and consume this.\nGet the underlying vector and consume this.\nGet the underlying vector and consume this.\nGet the underlying vector and consume this.\nGet the underlying vector and consume this.\nGet the underlying vector and consume this.\nGet the underlying vector and consume this.\nGet the underlying vector and consume this.\nGet the underlying vector and consume this.\nGet the underlying vector and consume this.\nCheck if the vector is empty.\nCheck if the vector is empty.\nCheck if the vector is empty.\nCheck if the vector is empty.\nCheck if the vector is empty.\nCheck if the vector is empty.\nCheck if the vector is empty.\nCheck if the vector is empty.\nCheck if the vector is empty.\nCheck if the vector is empty.\nCheck if the vector is empty.\nCheck if the vector is empty.\nReturns an iterator over the slice.\nReturns an iterator over the slice.\nReturns an iterator over the slice.\nReturns an iterator over the slice.\nReturns an iterator over the slice.\nReturns an iterator over the slice.\nReturns an iterator over the slice.\nReturns an iterator over the slice.\nReturns an iterator over the slice.\nReturns an iterator over the slice.\nReturns an iterator over the slice.\nReturns an iterator over the slice.\nGet the key size of the <code>AeadType</code> in bytes.\nGet the length of the vector.\nGet the length of the vector.\nGet the length of the vector.\nGet the length of the vector.\nGet the length of the vector.\nGet the length of the vector.\nGet the length of the vector.\nGet the length of the vector.\nGet the length of the vector.\nGet the length of the vector.\nGet the length of the vector.\nGet the length of the vector.\nGet the number of bytes used for the length encoding.\nGet the number of bytes used for the length encoding.\nGet the number of bytes used for the length encoding.\nGet the number of bytes used for the length encoding.\nGet the number of bytes used for the length encoding.\nGet the number of bytes used for the length encoding.\nGet the number of bytes used for the length encoding.\nGet the number of bytes used for the length encoding.\nGet the number of bytes used for the length encoding.\nGet the number of bytes used for the length encoding.\nGet the number of bytes used for the length encoding.\nGet the number of bytes used for the length encoding.\nGet the length of the AEAD tag.\nGet a reference to the sender ratchet configuration’s …\nGenerate a new variable-length byte vector.\nGenerate a new variable-length byte vector that implements …\nCreate a new <code>TlsVec</code> from a Rust Vec.\nCreate a new <code>TlsVec</code> from a Rust Vec.\nCreate a new <code>TlsVec</code> from a Rust Vec.\nCreate a new <code>TlsVec</code> from a Rust Vec.\nCreate a new <code>TlsVec</code> from a Rust Vec.\nCreate a new <code>TlsVec</code> from a Rust Vec.\nCreate a new <code>TlsVec</code> from a Rust Vec.\nCreate a new <code>TlsVec</code> from a Rust Vec.\nCreate a new <code>TlsVec</code> from a Rust Vec.\nCreate a new <code>TlsVec</code> from a Rust Vec.\nCreate a new <code>TlsVec</code> from a Rust Vec.\nCreate a new <code>TlsVec</code> from a Rust Vec.\nCreate a new <code>Capabilities</code> struct with the given …\nCreate a new <code>LeafNodeIndex</code> from a <code>u32</code>.\nCreate a new configuration\nGet the nonce size of the <code>AeadType</code> in bytes.\nGet a reference to the sender ratchet configuration’s …\nRemove the last element.\nRemove the last element.\nRemove the last element.\nRemove the last element.\nRemove the last element.\nRemove the last element.\nRemove the last element.\nRemove the last element.\nRemove the last element.\nRemove the last element.\nRemove the last element.\nRemove the last element.\nRemove the last element.\nRemove the last element.\nGet a reference to the list of supported proposals.\nSets the <code>proposals</code> field on the <code>Capabilities</code>.\nAdd an element to this.\nAdd an element to this.\nAdd an element to this.\nAdd an element to this.\nAdd an element to this.\nAdd an element to this.\nAdd an element to this.\nAdd an element to this.\nAdd an element to this.\nAdd an element to this.\nAdd an element to this.\nAdd an element to this.\nAdd an element to this.\nAdd an element to this.\nGet the randomness provider.\nFill an array with random bytes.\nFill a vector of length <code>len</code> with bytes.\nRemove the element at <code>index</code>.\nRemove the element at <code>index</code>.\nRemove the element at <code>index</code>.\nRemove the element at <code>index</code>.\nRemove the element at <code>index</code>.\nRemove the element at <code>index</code>.\nRemove the element at <code>index</code>.\nRemove the element at <code>index</code>.\nRemove the element at <code>index</code>.\nRemove the element at <code>index</code>.\nRemove the element at <code>index</code>.\nRemove the element at <code>index</code>.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nSign with the given parameters.\nGet the <code>SignatureScheme</code> for this <code>Ciphersuite</code>.\nGenerate a signature key.\nReturns the output size of a hash by <code>HashType</code>.\nReturns the list of supported <code>Ciphersuite</code>s.\nCheck whether the <code>Ciphersuite</code> is supported by the backend …\nGet the tag size of the <code>AeadType</code> in bytes.\nThis function deserializes the <code>bytes</code> from the provided a …\nThis function deserializes the provided <code>bytes</code> and returns …\nSerialize <code>self</code> and return it as a byte vector.\nReturn the inner value as <code>u32</code>.\nReturn the inner value as <code>usize</code>.\nVerify the signature\nGet a reference to the list of versions in this extension.\nSets the <code>versions</code> field on the <code>Capabilities</code>.\nRead the length of a variable-length vector.\nA secret that can be used among members to make sure …\nA group secret that can be used among members to prove …\nReturns the secret as a slice.\nReturns the secret as a slice.\nKey schedule errors.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPreshared keys.\nDuplicate PSK ID.\nThe PSK could not be found in the store.\nSee <code>LibraryError</code> for more details.\nNonce length mismatch.\nPSK secret error\nFailed to write PSK into storage.\nMore than 2^16 PSKs were provided.\nType mismatch.\nUsage mismatch.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAllowed PSK types.\nAllowed PSK types.\nExpected nonce length.\nFirst detected duplicate.\nGot PSK type.\nGot PSK type.\nGot nonce length.\nApplication.\nResumption PSK used for subgroup branching.\nAn external PSK provided by the application.\nAn external PSK.\nExternal PSK.\nA <code>PreSharedKeyID</code> is used to uniquely identify the PSKs …\nThe different PSK types.\nThis contains the <code>psk-secret</code> calculated from the PSKs …\nResumption PSK used for group reinitialization.\nA resumption PSK derived from the MLS key schedule.\nA resumption PSK.\nResumption PSK.\nResumption PSK usage.\nConstruct an external <code>PreSharedKeyID</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>ExternalPsk</code> from a PSK ID\nCreate a new <code>ResumptionPsk</code>\nConstruct a <code>PreSharedKeyID</code> with a random nonce.\nReturn the PSK.\nReturn the <code>GroupEpoch</code>\nReturn the <code>GroupId</code>\nReturn the PSK ID\nReturn the PSK nonce.\nConstruct a resumption <code>PreSharedKeyID</code>.\nThis module contains a store that can hold a rollover list …\nSave this <code>PreSharedKeyId</code> in the keystore.\nReturn the usage\nAn opaque error returned by all methods on this trait. …\nA convenience trait for the OpenMLS provider that defines …\nA convenience trait for the current version of the public …\nThe storage to use\nThe storage error type\nA convenience trait for the current version of the storage.\nThe leaf node was added via a Commit.\n<code>EncryptionKey</code> contains an HPKE public key that allows the …\nInvalid node signature.\nThe leaf node was added to the group as part of a key …\nThis struct implements the MLS leaf node.\nA leaf node.\nParameters for a leaf node that can be chosen by the …\nBuilder for <code>LeafNodeParameters</code>.\nThe source of the <code>LeafNode</code>.\nLeaf Node Update Error\nSee <code>LibraryError</code> for more details.\nThe ratchet tree is empty.\nContainer enum for leaf and parent nodes.\nThis struct implements the MLS parent node. It contains …\nA parent node.\nAn exported ratchet tree as used in, e.g., <code>GroupInfo</code>.\nAn error during processing of an incoming ratchet tree.\nA ratchet tree made of unverified nodes. This is used for …\nSignature error.\nError storing leaf private key in storage.\nThe ratchet tree has a trailing blank node.\nThe leaf node was added through an Update proposal.\nWrong node type.\nBuild the <code>LeafNodeParameters</code>.\nCreate a new <code>LeafNodeParametersBuilder</code>.\nReturns the capabilities.\nReturn a reference to <code>Capabilities</code>.\nReturns the <code>credential</code>.\nReturns the credential with key.\nReturns the <code>encryption_key</code>.\nTreeSync errors\nReturns the extensions.\nReturn a reference to the leaf node extensions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>RatchetTreeIn</code> from a vector of nodes after …\nReturn a reference to the leaf node source.\nReturns the <code>parent_hash</code> as byte slice or <code>None</code>.\nReturns a reference to the <code>Signature</code> of this leaf.\nReturns the <code>signature_key</code> as byte slice.\nSet the capabilities.\nSet the credential with key.\nSet the extensions.\nApply update path error\nThe group’s ciphersuite is not listed in the leaf node’…\nThe leaf node’s credential type is not listed in the …\nFound two KeyPackages with the same public key.\nThe leaf node’s encryption key is already used in the …\nThe leaf node’s extension types are not (all) listed in …\nAn update failed because the provided credential has a …\nExternal Committer used the wrong index.\nThe leaf node source is invalid in the given context.\nA parent hash was invalid.\nThe update path contains an invalid type of leaf node.\nThe leaf node credential is not supported by all members …\nErrors that can happen during leaf node validation.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nSee <code>LibraryError</code> for more details.\nLifetime is not acceptable.\nErrors that can happen during lifetime validation.\nThe tree is malformed.\nThe credential used by a member is not supported by this …\nCouldn’t find our own key package in this tree.\nThe parent hash of the ney key package is missing.\nUnable to find sender in tree.\nLifetime doesn’t cover current time.\nThe parent hash of the ney key package is invalid.\nThe length of the received update path and that of the …\nThe received update path and the derived nodes are not …\nThe derived public key doesn’t match the one in the tree.\nPublic tree error\nSee <code>PublicTreeError</code> for more details.\nLifetime range is too wide.\nSee <code>RatchetTreeError</code> for more details.\nSee <code>SignatureError</code> for more details.\nSee <code>SignatureError</code> for more details.\nThe leaf node’s signature key is already used in the …\nTree is already at maximum size.\nThe tree is full, we cannot add any more leaves.\nTreeSync set path error\nTreeSync from nodes error\nUnable to decrypt the path node.\nCredentials are not acceptable.\nExtensions are not acceptable.\nProposals are not acceptable.\nErrors that can happen during path validation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProtocol Version\nUnsupported MLS version.\nVersion Error\nReturns the argument unchanged.\nConvert an integer to the corresponding protocol version.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")